def InterPathMove(G,path1,pathlength1,capacity1,path2,pathlength2,capacity2,vertexCoordinates,allpairpathlength):
	# print("bye")
	path1cp=list(path1)
	path2cp=list(path2)
	pathres1=list(path1)
	lenres1=pathlength1
	capres1=capacity1
	pathres2=list(path2)
	lenres2=pathlength2
	capres2=capacity2
	for j in range(0,len(path2cp)):
		if capacity1+vertexCoordinates[path2cp[j]].capacity<G.capacity:
			a1=path1cp.append(path2cp[j])
			a2=list(path2cp)
			a2=a2.pop(j)
			c1=capacity1+vertexCoordinates[path2cp[j]].capacity
			c2=capacity2- vertexCoordinates[path2cp[j]].capacity
			a1,b1=sss(G,path1,pathlength1,allpairpathlength)
			a2,b2=sss(G,path2,pathlength2,allpairpathlength)
			if(b1+b2<lenres1+lenres2 and c1<G.capacity and c2<G.capacity):
				lenres1=b1
				lenres2=b2
				pathres1=a1
				pathres2=a2
				capres1=c1
				capres2=c2
	if(pathres1 != path1 or pathres2!=path2 and lenres1<pathlength1 and lenres2<pathlength2):
		return pathres1,pathres2,lenres1,lenres2,capres1,capres2,1
		print(path1,path2,pathlength1,pathlength2)
		print(pathres1,pathres2,b1,b2)
	return path1,path2,pathlength1,pathlength2,capacity1,capacity2,0
